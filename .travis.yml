# Use the python language default and install R as we need.  The travis version
# of R was too difficult to update with everything we need compared to just
# installing it in the python container.
language: python
cache:
  packages: true
  pip: true
  directories:
    - $HOME/.cache
    - $HOME/build/osumo/osumo/_build/data/plugins/osumo
sudo: false

compiler:
  - gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - r-packages-precise
    packages:
      # I doubt all of these are necessary, but I'm having trouble getting the
      # latest version of node, which is necessary for the webpack stuff
      - gcc-4.9
      - g++-4.9
      - gcc-4.9-multilib
      - g++-4.9-multilib
      - zip
      - libgtk2.0-0
      - python-dev
      - libgsl0-dev
      - r-base-dev
      - r-cran-matrix
      - r-cran-survival
      - r-recommended    # More than we really need

before_install:
  - echo "options(repos = c(CRAN='https://cran.rstudio.com/'))" > ~/.Rprofile
  - main_path=$PWD
  - build_path=$main_path/build
  - mkdir -p $build_path

  - mkdir -p $HOME/.cache
  - mkdir -p $HOME/build/osumo/osumo/_build/data/plugins/osumo

  - export R_LIBS=$HOME/.cache/R
  - export R_LIBS_USER=$R_LIBS
  - mkdir -p $R_LIBS || true

  - pip install -U pip virtualenv

  # Use Node 5.10
  - rm -rf ~/.nvm
  - git clone https://github.com/creationix/nvm.git ~/.nvm
  - source ~/.nvm/nvm.sh
  - nvm install 5.10
  - nvm use 5.10
  - npm config set python `which python`
  - if [ $TRAVIS_OS_NAME == "linux" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
  - cd $main_path

  - girder_path=$HOME/girder
  - rm -fr $girder_path
  - git clone https://github.com/girder/girder.git $girder_path && git -C $girder_path checkout a381b5822b1fb063e3d8877fc1a6ff629e52eebf
  - ln -sf $main_path $girder_path/plugins/
  - ls -l $girder_path/plugins

  - CACHE=$HOME/.cache CMAKE_VERSION=3.1.0 CMAKE_SHORT_VERSION=3.1 source $girder_path/scripts/install_cmake.sh
  - cmake --version

  - girder_worker_path=$HOME/girder_worker
  - git clone https://github.com/girder/girder_worker.git $girder_worker_path && git -C $girder_worker_path checkout 4429c6e98b2b11d47edb43390571551ab2d36749
  - cp $main_path/testing/travis/girder_worker.local.cfg $girder_worker_path/girder_worker/worker.local.cfg
  - pip install -U -r $girder_worker_path/requirements.txt -r $girder_worker_path/girder_worker/plugins/girder_io/requirements.txt -r $girder_worker_path/girder_worker/plugins/r/requirements.txt

  - export MONGO_VERSION=3.2.6
  - export PY_COVG="ON"
  - CACHE=$HOME/.cache source $girder_path/scripts/install_mongo.sh
  - mkdir /tmp/db
  - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
  - mongod --version

  - mkdir -p $HOME/.cache/node_modules || true
  - ln -sf $HOME/.cache/node_modules .
  - npm install -g npm
  - npm prune
  - npm install -g npm
  - npm --version

  - ln -s $main_path $girder_path/plugins/osumo

install:
  - R -e "install.packages(c('colorspace', 'deldir', 'FNN', 'magrittr', 'proxy', 'RColorBrewer'), repos='http://cran.rstudio.com')"
  - R -e "install.packages(c('cccd', 'cluster', 'igraph', 'jsonlite', 'pheatmap', 'survival'), repos='http://cran.rstudio.com')"
  - cd $girder_path
  - pip install -U -r requirements.txt -r requirements-dev.txt
  # - pip install --no-cache-dir -e .
  - npm install

script:
  - echo $R_LIBS
  - R -e ".libPaths()"

  - cd $main_path
  - npm run 'test:frontend'

  - cd $girder_worker_path
  - python -m girder_worker >/tmp/worker.out 2>&1 &

  - cd $main_path
  - mkdir -p _build
  - cd _build
  # Our coverage numbers are small, because we aren't testing all of girder
  - cmake -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DPYTHON_COVERAGE:BOOL=YES -DPYTHON_COVERAGE_CONFIG="$main_path/plugin_tests/pycoverage.cfg" -DCOVERAGE_MINIMUM_PASS=90 -DJS_COVERAGE_MINIMUM_PASS=9 $girder_path
  - make
  # Enable to verify worker is running
  # - cat /tmp/worker.out
  - JASMINE_TIMEOUT=15000 ctest -VV -R '(py_coverage_reset|py_coverage_combine|py_coverage$|coverage_xml|osumo)'
  # Enable to see worker log output
  # - cat /tmp/worker.out

